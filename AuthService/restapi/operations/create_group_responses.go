// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "PlanetLabs/AuthService/models"
)

// CreateGroupOKCode is the HTTP code returned for type CreateGroupOK
const CreateGroupOKCode int = 200

/*CreateGroupOK OK

swagger:response createGroupOK
*/
type CreateGroupOK struct {
}

// NewCreateGroupOK creates CreateGroupOK with default headers values
func NewCreateGroupOK() *CreateGroupOK {

	return &CreateGroupOK{}
}

// WriteResponse to the client
func (o *CreateGroupOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// CreateGroupConflictCode is the HTTP code returned for type CreateGroupConflict
const CreateGroupConflictCode int = 409

/*CreateGroupConflict Group already exists

swagger:response createGroupConflict
*/
type CreateGroupConflict struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequest `json:"body,omitempty"`
}

// NewCreateGroupConflict creates CreateGroupConflict with default headers values
func NewCreateGroupConflict() *CreateGroupConflict {

	return &CreateGroupConflict{}
}

// WithPayload adds the payload to the create group conflict response
func (o *CreateGroupConflict) WithPayload(payload *models.BadRequest) *CreateGroupConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create group conflict response
func (o *CreateGroupConflict) SetPayload(payload *models.BadRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateGroupConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
