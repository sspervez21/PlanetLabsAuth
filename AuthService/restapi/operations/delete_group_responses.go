// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "PlanetLabs/AuthService/models"
)

// DeleteGroupOKCode is the HTTP code returned for type DeleteGroupOK
const DeleteGroupOKCode int = 200

/*DeleteGroupOK OK

swagger:response deleteGroupOK
*/
type DeleteGroupOK struct {
}

// NewDeleteGroupOK creates DeleteGroupOK with default headers values
func NewDeleteGroupOK() *DeleteGroupOK {

	return &DeleteGroupOK{}
}

// WriteResponse to the client
func (o *DeleteGroupOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteGroupNotFoundCode is the HTTP code returned for type DeleteGroupNotFound
const DeleteGroupNotFoundCode int = 404

/*DeleteGroupNotFound Group does not exists

swagger:response deleteGroupNotFound
*/
type DeleteGroupNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequest `json:"body,omitempty"`
}

// NewDeleteGroupNotFound creates DeleteGroupNotFound with default headers values
func NewDeleteGroupNotFound() *DeleteGroupNotFound {

	return &DeleteGroupNotFound{}
}

// WithPayload adds the payload to the delete group not found response
func (o *DeleteGroupNotFound) WithPayload(payload *models.BadRequest) *DeleteGroupNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete group not found response
func (o *DeleteGroupNotFound) SetPayload(payload *models.BadRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteGroupNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
