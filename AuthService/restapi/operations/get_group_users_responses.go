// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "PlanetLabs/AuthService/models"
)

// GetGroupUsersOKCode is the HTTP code returned for type GetGroupUsersOK
const GetGroupUsersOKCode int = 200

/*GetGroupUsersOK OK

swagger:response getGroupUsersOK
*/
type GetGroupUsersOK struct {

	/*
	  Min Items: 1
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewGetGroupUsersOK creates GetGroupUsersOK with default headers values
func NewGetGroupUsersOK() *GetGroupUsersOK {

	return &GetGroupUsersOK{}
}

// WithPayload adds the payload to the get group users o k response
func (o *GetGroupUsersOK) WithPayload(payload []string) *GetGroupUsersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group users o k response
func (o *GetGroupUsersOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupUsersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetGroupUsersNotFoundCode is the HTTP code returned for type GetGroupUsersNotFound
const GetGroupUsersNotFoundCode int = 404

/*GetGroupUsersNotFound Group not found

swagger:response getGroupUsersNotFound
*/
type GetGroupUsersNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequest `json:"body,omitempty"`
}

// NewGetGroupUsersNotFound creates GetGroupUsersNotFound with default headers values
func NewGetGroupUsersNotFound() *GetGroupUsersNotFound {

	return &GetGroupUsersNotFound{}
}

// WithPayload adds the payload to the get group users not found response
func (o *GetGroupUsersNotFound) WithPayload(payload *models.BadRequest) *GetGroupUsersNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group users not found response
func (o *GetGroupUsersNotFound) SetPayload(payload *models.BadRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupUsersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
